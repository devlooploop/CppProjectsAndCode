// Course 05 - Algorithms & Problem-Solving Level 2

// Problem #33/2 Fill Array With Keys.

/*
Write a program to read how many keys to generate and fill them in array then 
print them on screen.

Input:
5

Output:
Array elements: 
   Key[1]: ETAI-HJUV-PEIP-CFRX
   Key[2]: UMCO-YSQI-XSDF-YILK
   Key[3]: ETAI-ZXEY-PEIP-CAWC
   Key[4]: UPGH-AHLT-FGLD-ZXCR
   Key[5]: ASCR-AWBN-MNHA-OPGW

*/

#include <iostream>
using namespace std;

enum enCharType { SamallLetter = 1, CapitalLetter = 2, SpecialCharacter = 3, Digit = 4 };

int RandomNumber(int From, int To)
{
	//Function to generate a random number
	int randNum = rand() % (To - From + 1) + From;
	return randNum;
}

char GetRandomCharacter(enCharType CharType)
{
	switch (CharType)
	{
	case enCharType::SamallLetter:
	{
		return char(RandomNumber(97, 122));
		break;

	}
	case enCharType::CapitalLetter:
	{
		return char(RandomNumber(65, 90));
		break;

	}
	case enCharType::SpecialCharacter:
	{
		return char(RandomNumber(33, 47));
		break;

	}
	case enCharType::Digit:
	{
		return char(RandomNumber(48, 57));
		break;

	}

	}

}

int ReadPositiveNumber(string Message)
{
	int Number = 0;
	do {
		cout << Message << endl;
		cin >> Number;
	} while (Number <= 0);

	return Number;
}

string GetRandomWord(enCharType CharType, short arrLength)
{
    string Word;
	
	for (int i = 0; i < arrLength; i++)
	{
		Word = " ";
		
		Word = GetRandomCharacter(enCharType::CapitalLetter);

		Word = Word + GetRandomCharacter(enCharType::CapitalLetter) +
			GetRandomCharacter(enCharType::CapitalLetter) + 
			GetRandomCharacter(enCharType::CapitalLetter);
		
	}
	return Word;
}

void GetArrayOfKeys(enCharType CharType, string arr[100], int WordLength)
{
	string Key;

	for (int i = 0; i < WordLength; i++)
	{
		Key = " ";
		Key = GetRandomWord(CharType, 4) + "-" + GetRandomWord(CharType, 4)+ "-"
			+ GetRandomWord(CharType, 4) + "-" + GetRandomWord(CharType, 4);

		arr[i] = Key;

	}
}

void PrintArrayKeys(string arr[100], short arrLength)
{
	for (int i = 0; i < arrLength ; i++)
	cout << "\nKey[" << i+1 << "]:"<< arr[i];
	cout << "\n";
}


int main()
{
	//Seeds the random number generator in C++, called only once    
	srand((unsigned)time(NULL));

	string arr[100]{};
	enCharType CharType = enCharType::CapitalLetter ;
	
	short arrLength = ReadPositiveNumber("How many Keys do you want to generate?\n");

	cout << "\nArray elements:\n";
	GetArrayOfKeys( CharType, arr, arrLength);
	PrintArrayKeys(arr, arrLength);
	
	return 0;
}

	




















































































































































































































































































































































































