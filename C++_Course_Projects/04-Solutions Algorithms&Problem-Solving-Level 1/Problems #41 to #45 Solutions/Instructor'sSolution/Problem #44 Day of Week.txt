// Course - 04 - Solutions - Algorithms&Problem-Solving-Level 1 
// Problems #41 to #45 Solutions

// Use Procedures, Functions & structures (enum, struct ) in all solutions
// From Algorthim and Problem Solving 

// Problem #44 Day of the week

/*
Write a program to ask the user to enter:
• Day
Then print the day as follows:
• 1 Print Sunday
• 2 Print Monday
• 3 Print Tuesday
• 4 Print Wednesday
• 5 Print Thursday
• 6 Print Friday
• 7 Print Saturday
• Otherwise print “Wrong Day” and ask the use to enter the day again.
Example Inputs:
6
Outputs:
Its Friday
*/

#include <iostream>
#include<string>

using namespace std;

enum enDayOfWeek { Sat = 1, Sun = 2, Mon = 3, Tue = 4, Wed = 5, Thu = 6, Fri = 7 };

int ReadNumberInRange(string Message, int From, int To)
{
     int  Number;

    do
    {
        cout << Message << endl;
        cin >> Number;
    } while ( Number <From || Number > To );

    return Number;
}

enDayOfWeek ReadDayOfWeek()
{
    return (enDayOfWeek)ReadNumberInRange("Please enter day number btween 1 & 7 ", 1,7 );
}

string GetDayOfWeek(enDayOfWeek Day)
{
    switch (Day)
    {
    case enDayOfWeek::Sat:
        return "It's Saturday\n";

    case enDayOfWeek::Sun:
        return "It's Sunday\n";

    case enDayOfWeek::Mon:
        return "It's Monday\n";

    case enDayOfWeek::Tue:
        return "It's Tuesday\n";

    case enDayOfWeek::Wed:
        return "It's Wednesday\n";

    case enDayOfWeek::Thu:
        return "It's Thursday\n";

    case enDayOfWeek::Fri:
        return "It's Friday\n";


    default:

        return "Not a valid day";

    }
}

int main()
{
    cout << GetDayOfWeek(ReadDayOfWeek()) << endl;

    return 0;
}



















































































































































































































