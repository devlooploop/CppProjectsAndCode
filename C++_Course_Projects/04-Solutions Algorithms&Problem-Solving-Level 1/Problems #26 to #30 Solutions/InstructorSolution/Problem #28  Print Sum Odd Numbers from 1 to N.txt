// Course - 04 - Solutions - Algorithms&Problem-Solving-Level 1 
//Problems #26 to #30 Solutions

// Use Procedures, Functions & structures (enum, struct ) in all solutions
// From Algorthim and Problem Solving 

// Problem #28 Sum odd numbers from 1 to N (Using While, Do..While, For)

/*

Write a program to Sum odd numbers from 1 to N.
Input
10

Outputs:
25
*/

#include <iostream>

using namespace std;

enum enOddOrEven { Odd = 1, Even = 2 };

int ReadNumber()
{
    int Number;
    cout << "Please enter a number? " << endl;
    cin >> Number;

    return Number;
}

enOddOrEven CheckOddOrEven(int Nunmber)
{
    if (Nunmber % 2 != 0)
        return enOddOrEven::Odd;
    else
        return enOddOrEven::Even;
}

int SumOddNumbersFrom1toN_UsingWhile(int N)
{
    int Counter = 0;
    int Sum = 0;

    cout << "Sum odd numbers using While Statement:\n";

    while (Counter < N)
    {
        Counter++;
        if (CheckOddOrEven(Counter) == enOddOrEven::Odd)
        {
            Sum += Counter;
        }
    }

    return Sum;
}

int SumOddNumbersFrom1toN_UsingDoWhile(int N)
{

    int Counter = 0;
    int Sum = 0;

    cout << "Sum odd numbers using Do..While Statement:\n";
    do
    {
        Counter++;
        if (CheckOddOrEven(Counter) == enOddOrEven::Odd)
        {
            Sum += Counter;
        }

    } while (Counter < N);
     
    return Sum;
}

int SumOddNumbersFrom1toN_UsingFor(int N)
{
    int Sum = 0;

    cout << "Sum odd numbers using For Statement:\n";

    for (int Counter = 1; Counter <= N; Counter++)
    {
        if (CheckOddOrEven(Counter) == enOddOrEven::Odd)
        {
            Sum += Counter;
        }
    }

    return Sum;
}


int main()
{
    int N = ReadNumber();

    cout << SumOddNumbersFrom1toN_UsingWhile(N) << endl;
    cout << SumOddNumbersFrom1toN_UsingDoWhile(N) << endl;
    cout << SumOddNumbersFrom1toN_UsingFor(N) << endl;



    return 0;
}


























































